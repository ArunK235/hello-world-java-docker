name: Frontend CI/CD - Deploy to Cloud Run

on:
  push:
    branches:
      - feature/devops
      # - feature/login

jobs:
  build:
    name: Build Angular & Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'FrontEnd/uc-ui/package-lock.json'

    - name: Clean & Install Dependencies
      working-directory: FrontEnd/uc-ui  
      run: |
        rm -rf node_modules package-lock.json
        npm install

    - name: Build Angular App
      working-directory: FrontEnd/uc-ui 
      run: npm run build --configuration=production

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCLOUD_AUTH }}

    - name: Configure Docker to Use gcloud CLI
      run: gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/uc-ai-frontend/app
        BUILD_ID=${{ github.run_id }}
        GIT_SHA=$(git rev-parse --short HEAD)

        # Build Docker image using the correct Dockerfile path
        docker build -t $IMAGE_NAME:$BUILD_ID -t $IMAGE_NAME:$GIT_SHA -t $IMAGE_NAME:latest \
          -f FrontEnd/uc-ui/Dockerfile FrontEnd/uc-ui  

        # Push images to Google Artifact Registry
        docker push $IMAGE_NAME:$BUILD_ID
        docker push $IMAGE_NAME:$GIT_SHA
        docker push $IMAGE_NAME:latest

        # Store the image name for deployment
        echo "IMAGE_NAME=$IMAGE_NAME:$BUILD_ID" >> $GITHUB_ENV

  deploy:
    name: Deploy Frontend to Cloud Run
    runs-on: ubuntu-latest
    needs: build
    concurrency: deploy-frontend

    steps:
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCLOUD_AUTH }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ secrets.CLOUDRUN_SERVICE }} \
          --image=${{ env.IMAGE_NAME }} \
          --region=${{ secrets.REGION }} \
          --platform=managed \
          --allow-unauthenticated
